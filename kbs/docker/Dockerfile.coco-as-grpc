FROM --platform=${BUILDPLATFORM} rust:slim as builder
ARG HTTPS_CRYPTO=rustls
# Predefined variables supported by BuildKit
ARG TARGETARCH
ARG BUILDARCH

WORKDIR /usr/src/kbs
COPY . .

RUN apt-get update && apt install -y protobuf-compiler wget git

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    make \
    perl

RUN wget https://go.dev/dl/go1.20.1.linux-${BUILDARCH}.tar.gz && \
    tar -C /usr/local -xzf go1.20.1.linux-${BUILDARCH}.tar.gz
ENV PATH="/usr/local/go/bin:${PATH}"

# To support cross-compilation
RUN if [  "${BUILDARCH}" != "${TARGETARCH}" ]; then apt-get install -y --no-install-recommends \
    gcc-"${TARGETARCH}"-linux-gnu \
    libc6-dev-"${TARGETARCH}"-cross && \
    rustup target add "${TARGETARCH}-unknown-linux-gnu" && \
    go env -w CC="${TARGETARCH}"-linux-gnu-gcc; fi

# Build and Install KBS
RUN https_crypto_feature="${HTTPS_CRYPTO}" && \
    if [ "${TARGETARCH}" = "s390x" ]; then https_crypto_feature="openssl"; fi && \
    if [ "${BUILDARCH}" != "${TARGETARCH}" ]; then \
        RUSTFLAGS=" -C linker=${TARGETARCH}-linux-gnu-gcc" CGO_ENABLED=1 GOARCH="${TARGETARCH}" \
        cargo install --path kbs/src/kbs --no-default-features --features coco-as-grpc,resource,opa,${https_crypto_feature} \
        --target "${TARGETARCH}-unknown-linux-gnu"; \
    else \
        cargo install --path kbs/src/kbs --no-default-features --features coco-as-grpc,resource,opa,${https_crypto_feature}; \
    fi

FROM --platform=${TARGETPLATFORM} ubuntu:22.04

LABEL org.opencontainers.image.source="https://github.com/confidential-containers/trustee/kbs"

COPY --from=builder /usr/local/cargo/bin/kbs /usr/local/bin/kbs
